@model LightweightCMS.Models.Page

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>Page</h4>
<hr />
<form asp-action="Create">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Titel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Background)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Public)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rows)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Columns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gap)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Elements)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.EditorFor(model => model.Titel)
                    <br /><span asp-validation-for="Titel" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Background)
                    <br /><span asp-validation-for="Background" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Public)
                    <br /><span asp-validation-for="Public" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Rows)
                    <br /><span asp-validation-for="Rows" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Columns)
                    <br /><span asp-validation-for="Columns" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Gap)
                    <br /><span asp-validation-for="Gap" class="text-danger"></span>
                </td>
                <td colspan="2">
                    @Html.DisplayFor(model => model.Elements.Count)
                    <br /><span asp-validation-for="Elements" class="text-danger"></span>
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Create" class="btn btn-default" />
                </td>
                <td colspan="5">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </td>
                <td colspan="3">
                </td>
            </tr>
        </tbody>
    </table>
</form>

<div>
    <a asp-action="List" class="actionlink">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
