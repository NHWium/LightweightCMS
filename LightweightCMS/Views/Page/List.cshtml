@model IEnumerable<LightweightCMS.Models.Page>
@inject Microsoft.AspNetCore.Identity.SignInManager<Microsoft.AspNetCore.Identity.IdentityUser> SignInManager
@inject Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser> UserManager

@{
    ViewData["Title"] = "List";
}

<h2>Pages</h2>

<div>
    <ul>
        @foreach (var item in Model)
        {
            @if (item.Public || item.User == await UserManager.GetUserAsync(User))
            {
                <li>@Html.ActionLink(item.Titel, "View", new { id = item.PageId })</li>
            }
        }
    </ul>
</div>
<hr />

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Titel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Background)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Public)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rows)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Columns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gap)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Elements)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Titel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Background)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Public)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rows)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Columns)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gap)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Elements.Count)
                    </td>
                    <td>
                        <a asp-action="View" asp-route-id="@item.PageId">View</a>
                        @if (await UserManager.GetUserAsync(User) == item.User)
                        {
                            @: |
                            <a asp-action="Edit" asp-route-id="@item.PageId">Edit</a>
                            @: |
                            <a asp-action="Delete" asp-route-id="@item.PageId">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
