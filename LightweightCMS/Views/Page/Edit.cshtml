@model LightweightCMS.Models.Page

@{
    ViewData["Title"] = Model.Titel + " - Edit";
    var auto = "auto ";
}

<h2>Edit</h2>
<h4>Page</h4>

<form asp-action="Edit">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Titel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Background)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Public)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rows)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Columns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gap)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Elements)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.EditorFor(model => model.Titel)
                    <br /><span asp-validation-for="Titel" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Background)
                    <br /><span asp-validation-for="Background" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Public)
                    <br /><span asp-validation-for="Public" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Rows)
                    <br /><span asp-validation-for="Rows" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Columns)
                    <br /><span asp-validation-for="Columns" class="text-danger"></span>
                </td>
                <td>
                    @Html.EditorFor(model => model.Gap)
                    <br /><span asp-validation-for="Gap" class="text-danger"></span>
                </td>
                <td colspan="2">
                    @Html.DisplayFor(model => model.Elements.Count)
                    <br /><span asp-validation-for="Elements" class="text-danger"></span>
                </td>
                <td></td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Save" class="btn btn-default" />
                </td>
                <td colspan="5">
                    <input type="hidden" asp-for="PageId" />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </td>
                <td colspan="3">
                    @Html.ActionLink("Add Element", "AddElement", new { id = Model.PageId })
                </td>
            </tr>
        </tbody>
    </table>
</form>
<hr />
<div id="MainContent" style="background-color: @Model.Background;">
    <h2>@Html.DisplayFor(model => model.Titel)</h2>
    <div style="display: grid; grid-gap: @Model.Gap px;
            grid-template-rows:@auto @for (int i = 1; i < Model.Rows; i++) { @auto; };
            grid-template-columns:@auto @for (int i = 1; i < Model.Columns; i++) { @auto };
     ">
        @foreach (Element element in Model.Elements)
        {
            @await Html.PartialAsync("_ElementEditPartial", element, new ViewDataDictionary(ViewData));
        }
    </div>
</div>

<hr />

<div>
    <a asp-action="View" asp-route-id="@Model.PageId" class="actionlink">View</a> |
    <a asp-action="Delete" asp-route-id="@Model.PageId" class="actionlink">Delete</a> |
    <a asp-action="List" class="actionlink">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
